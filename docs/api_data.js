define({ "api": [  {    "type": "get",    "url": "/rentals",    "title": "Busca locações",    "group": "Aluguel",    "description": "<p>Lista as locações ainda não devolvidas</p>",    "success": {      "fields": {        "200 - OK": [          {            "group": "200 - OK",            "type": "Array",            "optional": false,            "field": "data",            "description": "<p>Listagem das locações</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Resposta:",          "content": " HTTP/1.1 200 OK\n {\n   \"data\": [\n       {\n           \"id\": 1,\n           \"rental_date\": \"2019-08-26\",\n           \"return_date\": null,\n           \"deletedAt\": null,\n           \"customer_id\": 2,\n           \"film_id\": 1,\n           \"customer\": {\n               \"id\": 2,\n               \"name\": \"Films Lover\",\n               \"email\": \"films_lover@gmail.com\"\n           },\n           \"film\": {\n               \"available\": 0,\n               \"id\": 1,\n               \"title\": \"Taxi Driver\",\n               \"copies\": 3,\n               \"rented\": 3,\n               \"director_id\": 2,\n               \"director\": {\n                   \"id\": 2,\n                   \"name\": \"Steven Spielberg\"\n             }\n          }\n       }\n   ]\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Aluguel",    "name": "GetRentals",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Json Web Token. Deve seguir o padrão &quot;Bearer {{ token }}&quot;</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cabeçalho:",          "content": "{\n   \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTY2ODU5MjU3LCJleHAiOjE1NjY4NjQyNTd9.PW8LXAw1M0IDen5IeeC-crXo_YbHzWx8EVgpLZkm_J4\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 - UNAUTHORIZED": [          {            "group": "401 - UNAUTHORIZED",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não autorizado a acessar o recurso solicitado.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/rentals/rent/:filmId",    "title": "Solicita locação",    "group": "Aluguel",    "description": "<p>Solicita locação de um filme em função de seu id</p>",    "success": {      "fields": {        "201 - CREATED": [          {            "group": "201 - CREATED",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Detalhes da locação</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Aluguel",    "name": "PostRentalsRentFilmid",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Json Web Token. Deve seguir o padrão &quot;Bearer {{ token }}&quot;</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cabeçalho:",          "content": "{\n   \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTY2ODU5MjU3LCJleHAiOjE1NjY4NjQyNTd9.PW8LXAw1M0IDen5IeeC-crXo_YbHzWx8EVgpLZkm_J4\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 - UNAUTHORIZED": [          {            "group": "401 - UNAUTHORIZED",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não autorizado a acessar o recurso solicitado.</p>"          }        ],        "404 - NOT FOUND": [          {            "group": "404 - NOT FOUND",            "optional": false,            "field": "NotFoundError",            "description": "<p>Recurso não encontrado.</p>"          }        ],        "400 - BAD REQUEST": [          {            "group": "400 - BAD REQUEST",            "optional": false,            "field": "BadRequestError",            "description": "<p>Erro.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/login",    "title": "Login",    "group": "Auth",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-mail do usuário a ser validado</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Senha do usuário</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>JWT Token válido para futuras requisições</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Detalhes do usuário autenticado</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Resposta:",          "content": "HTTP/1.1 200 OK\n{\n  \"token\": \"...\",\n  \"user\": {\n    \"id\": 1,\n    \"email\": \"tester@test.com\",\n    \"name\": \"Tester\"\n   }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não encontrado. Verifique suas credenciais</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Auth",    "name": "PostLogin"  },  {    "type": "post",    "url": "/logout",    "title": "Logout",    "group": "Auth",    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Auth",    "name": "PostLogout",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Json Web Token. Deve seguir o padrão &quot;Bearer {{ token }}&quot;</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cabeçalho:",          "content": "{\n   \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTY2ODU5MjU3LCJleHAiOjE1NjY4NjQyNTd9.PW8LXAw1M0IDen5IeeC-crXo_YbHzWx8EVgpLZkm_J4\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 - UNAUTHORIZED": [          {            "group": "401 - UNAUTHORIZED",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não autorizado a acessar o recurso solicitado.</p>"          }        ]      }    }  },  {    "type": "post",    "url": "/register",    "title": "Cadastro de usuário",    "group": "Auth",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>E-mail do usuário</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Senha do usuário</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nome do usuário para exibição</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>JWT Token válido para futuras requisições</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>Detalhes do usuário criado e autenticado</p>"          }        ]      },      "examples": [        {          "title": "Resposta:",          "content": "HTTP/1.1 200 OK\n{\n  \"token\": \"...\",\n  \"user\": {\n    \"id\": 1,\n    \"email\": \"tester@test.com\",\n    \"name\": \"Tester\"\n   }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "ValidationError",            "description": "<p>Erro de validação com descrição dos campos não adequados</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Auth",    "name": "PostRegister"  },  {    "type": "delete",    "url": "/films/:id",    "title": "Exclusão de filme",    "group": "Filmes",    "description": "<p>Remove um filme em função do id.</p>",    "success": {      "fields": {        "204 - NO CONTENT": [          {            "group": "204 - NO CONTENT",            "optional": false,            "field": "-",            "description": "<p>No content</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Filmes",    "name": "DeleteFilmsId",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Json Web Token. Deve seguir o padrão &quot;Bearer {{ token }}&quot;</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cabeçalho:",          "content": "{\n   \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTY2ODU5MjU3LCJleHAiOjE1NjY4NjQyNTd9.PW8LXAw1M0IDen5IeeC-crXo_YbHzWx8EVgpLZkm_J4\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 - UNAUTHORIZED": [          {            "group": "401 - UNAUTHORIZED",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não autorizado a acessar o recurso solicitado.</p>"          }        ],        "404 - NOT FOUND": [          {            "group": "404 - NOT FOUND",            "optional": false,            "field": "NotFoundError",            "description": "<p>Recurso não encontrado.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/films/available",    "title": "Busca por filmes disponíveis",    "group": "Filmes",    "description": "<p>Retorna uma lista apenas de filmes disponíveis para locação.</p>",    "success": {      "fields": {        "200 - OK": [          {            "group": "200 - OK",            "type": "Array",            "optional": false,            "field": "data",            "description": "<p>Listagem de filmes</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Filmes",    "name": "GetFilmsAvailable",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Json Web Token. Deve seguir o padrão &quot;Bearer {{ token }}&quot;</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cabeçalho:",          "content": "{\n   \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTY2ODU5MjU3LCJleHAiOjE1NjY4NjQyNTd9.PW8LXAw1M0IDen5IeeC-crXo_YbHzWx8EVgpLZkm_J4\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 - UNAUTHORIZED": [          {            "group": "401 - UNAUTHORIZED",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não autorizado a acessar o recurso solicitado.</p>"          }        ]      }    }  },  {    "type": "get",    "url": "/films/title/:title",    "title": "Busca por título",    "group": "Filmes",    "description": "<p>Retorna um filme em função de um título. Caso não exista um filme exatamente com o nome requerido, será retornado o filme com nome mais próximo.</p>",    "success": {      "fields": {        "200 - OK": [          {            "group": "200 - OK",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Filme solicitado, se existente.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Filmes",    "name": "GetFilmsTitleTitle",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Json Web Token. Deve seguir o padrão &quot;Bearer {{ token }}&quot;</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cabeçalho:",          "content": "{\n   \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTY2ODU5MjU3LCJleHAiOjE1NjY4NjQyNTd9.PW8LXAw1M0IDen5IeeC-crXo_YbHzWx8EVgpLZkm_J4\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 - UNAUTHORIZED": [          {            "group": "401 - UNAUTHORIZED",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não autorizado a acessar o recurso solicitado.</p>"          }        ]      }    }  },  {    "type": " get ",    "url": "/films",    "title": "Busca todos os filmes",    "group": "Filmes",    "description": "<p>Retorna uma listagem completa de todos os filmes.</p>",    "success": {      "fields": {        "200 - OK": [          {            "group": "200 - OK",            "type": "Array",            "optional": false,            "field": "data",            "description": "<p>Listagem completa de filmes</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Resposta:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"title\": \"Goodfellas\",\n      \"copies\": 3,\n      \"rented\": 1,  \n      \"available\": 4,\n      \"director_id\": 1,\n      \"director\": {\n        \"id\": 1,\n        \"name\": \"Martin Scorsese\"\n       }\n    }\n   ]\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Filmes",    "name": "_get_Films",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Json Web Token. Deve seguir o padrão &quot;Bearer {{ token }}&quot;</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cabeçalho:",          "content": "{\n   \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTY2ODU5MjU3LCJleHAiOjE1NjY4NjQyNTd9.PW8LXAw1M0IDen5IeeC-crXo_YbHzWx8EVgpLZkm_J4\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 - UNAUTHORIZED": [          {            "group": "401 - UNAUTHORIZED",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não autorizado a acessar o recurso solicitado.</p>"          }        ]      }    }  },  {    "type": " get ",    "url": "/films/:id",    "title": "Busca por id",    "group": "Filmes",    "description": "<p>Retorna um filme em função do id.</p>",    "success": {      "fields": {        "200 - OK": [          {            "group": "200 - OK",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Filme solicitado, se existente.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Filmes",    "name": "_get_FilmsId",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Json Web Token. Deve seguir o padrão &quot;Bearer {{ token }}&quot;</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cabeçalho:",          "content": "{\n   \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTY2ODU5MjU3LCJleHAiOjE1NjY4NjQyNTd9.PW8LXAw1M0IDen5IeeC-crXo_YbHzWx8EVgpLZkm_J4\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 - UNAUTHORIZED": [          {            "group": "401 - UNAUTHORIZED",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não autorizado a acessar o recurso solicitado.</p>"          }        ],        "404 - NOT FOUND": [          {            "group": "404 - NOT FOUND",            "optional": false,            "field": "NotFoundError",            "description": "<p>Recurso não encontrado.</p>"          }        ]      }    }  },  {    "type": " post ",    "url": "/films",    "title": "Cadastro de filme",    "group": "Filmes",    "description": "<p>Cadastra um novo filme.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Requerido. Título do filme</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "director_id",            "description": "<p>Opcional. ID do diretor do filme. Não deve coexistir com o campo 'director'</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "director",            "description": "<p>Opcional. Cria um novo diretor e associa ao filme. Não deve coexistir com o campo 'director_id'</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "director.name",            "description": "<p>Requerido. Nome do diretor a ser criado</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cadastro com referência a um diretor existente",          "content": "{\n \"title\": \"The Godfather\",\n  \"director_id\": 1\n}",          "type": "json"        },        {          "title": "Exemplo - Cadastro com criação de um diretor",          "content": "{\n \"title\": \"The Godfather\",\n  \"director\": {\n     \"name\": \"Francis Ford Coppola\"\n   }\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "201": [          {            "group": "201",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Filme criado</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Filmes",    "name": "_post_Films",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Json Web Token. Deve seguir o padrão &quot;Bearer {{ token }}&quot;</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cabeçalho:",          "content": "{\n   \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTY2ODU5MjU3LCJleHAiOjE1NjY4NjQyNTd9.PW8LXAw1M0IDen5IeeC-crXo_YbHzWx8EVgpLZkm_J4\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 - UNAUTHORIZED": [          {            "group": "401 - UNAUTHORIZED",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não autorizado a acessar o recurso solicitado.</p>"          }        ],        "400 - BAD REQUEST": [          {            "group": "400 - BAD REQUEST",            "optional": false,            "field": "ValidationError",            "description": "<p>Erro de validação com descrição dos campos não adequados</p>"          },          {            "group": "400 - BAD REQUEST",            "optional": false,            "field": "ValidationError.errors[]",            "description": "<p>Listagem de campos inválidos</p>"          }        ]      }    }  },  {    "type": " put ",    "url": "/films/:id",    "title": "Edição de filme",    "group": "Filmes",    "description": "<p>Edita um filme em função do id.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Opcional. Novo título do filme</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "director_id",            "description": "<p>Opcional. Novo ID do diretor do filme.</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Edição de filme de id 2",          "content": "// PUT films/2\n{\n \"title\": \"The Curious Case of Benjamin Button\",\n  \"director_id\": 2\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "201 - CREATED": [          {            "group": "201 - CREATED",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Filme editado</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Resposta:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    {\n      \"id\": 2,\n      \"title\": \"The Curious Case of Benjamin Button\",\n      \"copies\": 5,\n      \"rented\": 2,  \n      \"available\": 3,\n      \"director_id\": 2,\n      \"director\": {\n        \"id\": 2,\n        \"name\": \"David Fincher\"\n       }\n    }\n  }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./docs.js",    "groupTitle": "Filmes",    "name": "_put_FilmsId",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Json Web Token. Deve seguir o padrão &quot;Bearer {{ token }}&quot;</p>"          }        ]      },      "examples": [        {          "title": "Exemplo - Cabeçalho:",          "content": "{\n   \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTY2ODU5MjU3LCJleHAiOjE1NjY4NjQyNTd9.PW8LXAw1M0IDen5IeeC-crXo_YbHzWx8EVgpLZkm_J4\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "401 - UNAUTHORIZED": [          {            "group": "401 - UNAUTHORIZED",            "optional": false,            "field": "UnauthorizedError",            "description": "<p>Usuário não autorizado a acessar o recurso solicitado.</p>"          }        ],        "400 - BAD REQUEST": [          {            "group": "400 - BAD REQUEST",            "optional": false,            "field": "ValidationError",            "description": "<p>Erro de validação com descrição dos campos não adequados</p>"          },          {            "group": "400 - BAD REQUEST",            "optional": false,            "field": "ValidationError.errors[]",            "description": "<p>Listagem de campos inválidos</p>"          }        ],        "404 - NOT FOUND": [          {            "group": "404 - NOT FOUND",            "optional": false,            "field": "NotFoundError",            "description": "<p>Recurso não encontrado.</p>"          }        ]      }    }  }] });
